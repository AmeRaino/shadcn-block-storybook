{
  "name": "my-button",
  "type": "registry:block",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "import { cn } from \"@/lib/utils\";\r\nimport { commonIcon } from \"../common-icon\";\r\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport * as React from \"react\";\r\nimport { MyIconfy } from \"./my-icon\";\r\n\r\nconst MyButtonVariants = cva(\r\n  \"cursor-pointer inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/60 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        outline:\r\n          \"border border-primary text-primary bg-background hover:bg-primary hover:text-primary-foreground\",\r\n        pill: \"rounded-3xl bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80 focus-visible:ring-secondary/60\",\r\n        \"secondary-outline\":\r\n          \"bg-secondary-foreground border border-secondary text-secondary hover:bg-secondary hover:text-secondary-foreground focus-visible:ring-secondary/60\",\r\n        \"secondary-pill\":\r\n          \"rounded-3xl bg-secondary text-secondary-foreground hover:bg-secondary/80 focus-visible:ring-secondary/80\",\r\n        gray: \"bg-[#F7F7F8] text-[#5D5E6C] hover:bg-neutral-200 focus-visible:ring-muted/60\",\r\n        \"gray-outline\":\r\n          \"bg-[#F7F7F8] text-[#5D5E6C] border border-[#EEEEF0] hover:bg-[#5D5E6C] hover:text-white focus-visible:ring-muted/60\",\r\n        \"gray-pill\":\r\n          \"rounded-3xl bg-[#F7F7F8] text-[#5D5E6C] hover:bg-neutral-200 focus-visible:ring-muted/60\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground focus-visible:ring-accent/80\",\r\n        \"ghost-pill\":\r\n          \"rounded-3xl hover:bg-accent hover:text-accent-foreground focus-visible:ring-accent/80\",\r\n        link: \"text-primary underline-offset-4 hover:underline focus-visible:ring-accent/80\",\r\n      },\r\n      effect: {\r\n        expandIcon: \"group gap-0 relative\",\r\n        ringHover:\r\n          \"transition-all duration-300 hover:ring-2 hover:ring-primary/90 hover:ring-offset-2\",\r\n        shine:\r\n          \"before:animate-shine relative overflow-hidden before:absolute before:inset-0 before:rounded-[inherit] before:bg-[linear-gradient(45deg,transparent_25%,rgba(255,255,255,0.5)_50%,transparent_75%,transparent_100%)] before:bg-[length:250%_250%,100%_100%] before:bg-no-repeat background-position_0s_ease\",\r\n        shineHover:\r\n          \"relative overflow-hidden before:absolute before:inset-0 before:rounded-[inherit] before:bg-[linear-gradient(45deg,transparent_25%,rgba(255,255,255,0.5)_50%,transparent_75%,transparent_100%)] before:bg-[length:250%_250%,100%_100%] before:bg-[position:200%_0,0_0] before:bg-no-repeat before:transition-[background-position_0s_ease] hover:before:bg-[position:-100%_0,0_0] before:duration-1000\",\r\n        gooeyRight:\r\n          \"relative z-0 overflow-hidden transition-all duration-500 before:absolute before:inset-0 before:-z-10 before:translate-x-[150%] before:translate-y-[150%] before:scale-[2.5] before:rounded-[100%] before:bg-gradient-to-r from-white/40 before:transition-transform before:duration-1000  hover:before:translate-x-[0%] hover:before:translate-y-[0%]\",\r\n        gooeyLeft:\r\n          \"relative z-0 overflow-hidden transition-all duration-500 after:absolute after:inset-0 after:-z-10 after:translate-x-[-150%] after:translate-y-[150%] after:scale-[2.5] after:rounded-[100%] after:bg-gradient-to-l from-white/40 after:transition-transform after:duration-1000  hover:after:translate-x-[0%] hover:after:translate-y-[0%]\",\r\n        underline:\r\n          \"relative !no-underline after:absolute after:bg-primary after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-left after:scale-x-100 hover:after:origin-bottom-right hover:after:scale-x-0 after:transition-transform after:ease-in-out after:duration-300\",\r\n        hoverUnderline:\r\n          \"relative !no-underline after:absolute after:bg-primary after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-right after:scale-x-0 hover:after:origin-bottom-left hover:after:scale-x-100 after:transition-transform after:ease-in-out after:duration-300\",\r\n        \"secondary-underline\":\r\n          \"relative !no-underline after:absolute after:bg-secondary after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-left after:scale-x-100 hover:after:origin-bottom-right hover:after:scale-x-0 after:transition-transform after:ease-in-out after:duration-300\",\r\n        \"secondary-hoverUnderline\":\r\n          \"relative !no-underline after:absolute after:bg-secondary after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-right after:scale-x-0 hover:after:origin-bottom-left hover:after:scale-x-100 after:transition-transform after:ease-in-out after:duration-300\",\r\n        gradientSlideShow:\r\n          \"bg-[size:400%] bg-[linear-gradient(-45deg,var(--gradient-lime),var(--gradient-ocean),var(--gradient-wine),var(--gradient-rust))] animate-gradient-flow\",\r\n      },\r\n      size: {\r\n        default: \"px-5 py-2.5 [&>svg]:size-4.5\",\r\n        sm: \"px-3 py-2\",\r\n        lg: \"px-5 py-3 [&>svg]:size-5 text-base\",\r\n        icon: \"p-3\",\r\n        \"icon-sm\": \"p-2.5 [&>svg]:size-3\",\r\n        \"icon-lg\": \"p-3.5 [&>svg]:size-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\ntype TIconProps = {\r\n  icon: keyof typeof commonIcon | React.ReactNode;\r\n  iconPlacement?: \"left\" | \"right\";\r\n};\r\n\r\ntype TIconRefProps = {\r\n  icon?: never;\r\n  iconPlacement?: undefined;\r\n};\r\n\r\nexport type ButtonIconProps = TIconProps | TIconRefProps;\r\n\r\nfunction MyButton({\r\n  className,\r\n  variant,\r\n  effect,\r\n  size,\r\n  icon: Icon,\r\n  iconPlacement = \"left\",\r\n  disabled = false,\r\n  loading = false,\r\n  type = \"button\",\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  ButtonIconProps &\r\n  VariantProps<typeof MyButtonVariants> & {\r\n    asChild?: boolean;\r\n    loading?: boolean;\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\";\r\n  return (\r\n    <Comp\r\n      type={type}\r\n      className={cn(MyButtonVariants({ variant, effect, size, className }))}\r\n      disabled={loading || disabled}\r\n      {...props}\r\n    >\r\n      {loading && (\r\n        <MyIconfy icon={commonIcon.loader} className=\"size-4.5 animate-spin\" />\r\n      )}\r\n      {!loading &&\r\n        Icon &&\r\n        iconPlacement === \"left\" &&\r\n        (effect === \"expandIcon\" ? (\r\n          <div className=\"w-0 translate-x-[0%] pr-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:translate-x-100 group-hover:pr-2 group-hover:opacity-100\">\r\n            {typeof Icon === \"string\" ? <MyIconfy icon={Icon} /> : Icon}\r\n          </div>\r\n        ) : typeof Icon === \"string\" ? (\r\n          <MyIconfy icon={Icon} />\r\n        ) : (\r\n          Icon\r\n        ))}\r\n      <Slottable>{props.children}</Slottable>\r\n      {Icon &&\r\n        iconPlacement === \"right\" &&\r\n        (effect === \"expandIcon\" ? (\r\n          <div className=\"w-0 translate-x-[100%] pl-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:translate-x-0 group-hover:pl-2 group-hover:opacity-100\">\r\n            {typeof Icon === \"string\" ? <MyIconfy icon={Icon} /> : Icon}\r\n          </div>\r\n        ) : typeof Icon === \"string\" ? (\r\n          <MyIconfy icon={Icon} />\r\n        ) : (\r\n          Icon\r\n        ))}\r\n    </Comp>\r\n  );\r\n}\r\n\r\nMyButton.displayName = \"MyButton\";\r\n\r\nexport { MyButton, MyButtonVariants };\r\n",
      "path": "block/base-component/my-button.tsx",
      "target": "components/block/base-component/my-button.tsx"
    },
    {
      "type": "registry:block",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Icon,\r\n  IconifyIconHTMLElement,\r\n  IconifyIconProps,\r\n} from \"@iconify-icon/react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst myIconVariants = cva(\"inline-flex\", {\r\n  variants: {\r\n    variant: {\r\n      primary: \"text-primary\",\r\n      secondary: \"text-secondary\",\r\n      white: \"text-white\",\r\n      danger: \"text-red-500\",\r\n    },\r\n    size: {\r\n      sm: \"h-4 w-4\", // size small\r\n      md: \"h-6 w-6\", // size medium\r\n      lg: \"h-8 w-8\", // size large\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    // variant: \"primary\",\r\n    size: \"md\",\r\n  },\r\n});\r\n\r\nexport interface IconfyProps\r\n  extends Omit<IconifyIconProps, \"size\" | \"ref\">,\r\n    VariantProps<typeof myIconVariants> {}\r\n\r\nconst MyIconfy = React.forwardRef<IconifyIconHTMLElement, IconfyProps>(\r\n  ({ className, variant, size, icon, ...props }, ref) => {\r\n    return (\r\n      <Icon\r\n        icon={icon}\r\n        ref={ref}\r\n        height=\"none\"\r\n        className={cn(myIconVariants({ variant, size, className }))}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nMyIconfy.displayName = \"MyIconfy\";\r\n\r\nexport { MyIconfy, myIconVariants };\r\n",
      "path": "block/base-component/my-icon.tsx",
      "target": "components/block/base-component/my-icon.tsx"
    },
    {
      "type": "registry:block",
      "content": "export const commonIcon = {\r\n  add: \"ic:round-add\",\r\n  edit: \"ic:round-edit\",\r\n  delete: \"ic:round-delete\",\r\n  filter: \"ic:round-filter-list\",\r\n  sort: \"ic:round-sort\",\r\n  close: \"ic:round-close\",\r\n  check: \"lucide:check\",\r\n  save: \"ic:round-save\",\r\n  cancel: \"ic:round-cancel\",\r\n  checkCircle: \"ic:round-check-circle\",\r\n  calendar: \"lucide:calendar\",\r\n  chevronDown: \"lucide:chevron-down\",\r\n  chevronUp: \"lucide:chevron-up\",\r\n  chevronLeft: \"lucide:chevron-left\",\r\n  chevronRight: \"lucide:chevron-right\",\r\n  loader: \"lucide:loader-circle\",\r\n  searchIcon: \"lucide:search\",\r\n  x: \"lucide:x\",\r\n  circle: \"lucide:circle\",\r\n  sparkles: \"lucide:sparkles\",\r\n  circleAlert: \"lucide:circle-alert\",\r\n};\r\n",
      "path": "block/common-icon.tsx",
      "target": "components/block/common-icon.tsx"
    }
  ]
}