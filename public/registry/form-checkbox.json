{
  "name": "form-checkbox",
  "type": "registry:block",
  "registryDependencies": [
    "form",
    "checkbox"
  ],
  "dependencies": [
    "react-hook-form"
  ],
  "files": [
    {
      "type": "registry:block",
      "content": "\"use client\";\r\n\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { Control, FieldPath, FieldValues } from \"react-hook-form\";\r\n\r\nimport {\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/components/ui/form\";\r\nimport { CheckedState } from \"@radix-ui/react-checkbox\";\r\nimport { ComponentProps } from \"react\";\r\nimport { MyCheckbox } from \"../base-component/my-checkbox\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ntype TFormCheckbox<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TFieldName;\r\n  control: Control<TFieldValues>;\r\n  label?: string | React.ReactNode;\r\n  description?: string | React.ReactNode;\r\n  formLabelProps?: React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>;\r\n  containerProps?: ComponentProps<\"div\">;\r\n  onCheckedChangeCallBack?: (e: CheckedState) => void | CheckedState;\r\n} & Omit<ComponentProps<typeof MyCheckbox>, \"onChange\" | \"checked\">;\r\n\r\nexport const FormCheckbox = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  label,\r\n  description,\r\n  formLabelProps,\r\n  name,\r\n  control,\r\n  containerProps,\r\n  onCheckedChangeCallBack,\r\n  ...props\r\n}: TFormCheckbox<TFieldValues, TFieldName>) => {\r\n  const { className: containerClassName, ...restContainerProps } =\r\n    containerProps || {};\r\n\r\n  return (\r\n    <FormField\r\n      control={control}\r\n      name={name}\r\n      render={({ field: { value, onChange, ...fieldProps } }) => (\r\n        <FormItem>\r\n          {label && <FormLabel {...formLabelProps}>{label}</FormLabel>}\r\n          <div\r\n            className={cn(\"flex items-center gap-2\", containerClassName)}\r\n            {...restContainerProps}\r\n          >\r\n            <FormControl className={containerProps?.className}>\r\n              <MyCheckbox\r\n                {...props}\r\n                {...fieldProps}\r\n                checked={value}\r\n                onCheckedChange={(e) => {\r\n                  const valueCallBack = onCheckedChangeCallBack?.(e);\r\n                  onChange(\r\n                    typeof valueCallBack === \"boolean\" ? valueCallBack : e\r\n                  );\r\n                }}\r\n              />\r\n            </FormControl>\r\n            {description}\r\n          </div>\r\n          <FormMessage />\r\n        </FormItem>\r\n      )}\r\n    />\r\n  );\r\n};\r\n",
      "path": "block/form/form-checkbox.tsx",
      "target": "components/block/form/form-checkbox.tsx"
    }
  ]
}